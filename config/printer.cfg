[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_24003F000647333137383034-if00

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 1000
max_z_velocity: 25
max_z_accel: 30

#######################################################################################################################
# Definition for z. FYI Z_CS_PIN = PD5
#######################################################################################################################

[stepper_z]
step_pin: PE2
dir_pin: PD6
enable_pin: !PD7
endstop_pin: !PD11
microsteps: 16
rotation_distance: 8
position_endstop: 0
position_max: 240
homing_speed: 20

#######################################################################################################################
# Definition for y. FYI Y_CS_PIN = PB6.
# NB: it's a TMC2225 which is apparently just a tmc2208
#######################################################################################################################

[stepper_y]
step_pin: PE3
dir_pin: PB7
enable_pin: !PB8
endstop_pin: !PD10
microsteps: 16
rotation_distance: 40
position_endstop: 220
position_max: 220
homing_speed: 50

[tmc2208 stepper_y]
uart_pin: PB6
run_current: 0.8
stealthchop_threshold: 0
# stealthchop_threshold: 999999

#######################################################################################################################
# Left extruder X / primary carriage. FYI CS_PIN = PC15
# NB: it's a TMC2225 which is apparently just a tmc2208
#######################################################################################################################

[stepper_x]
step_pin: PE5
dir_pin: !PC0
enable_pin: !PC1
endstop_pin: !PC6
microsteps: 16
rotation_distance: 40
position_min: -55
position_endstop: -55
position_max: 205
homing_speed: 50

[tmc2208 stepper_x]
uart_pin: PC15
run_current: 0.8
stealthchop_threshold: 0
# stealthchop_threshold: 999999

#######################################################################################################################
# Right extruder X / secondary carriage. FYI CS_PIN = PA8
# NB: it's a TMC2225 which is apparently just a tmc2208
#######################################################################################################################

[dual_carriage]
axis: x
step_pin: PE4
dir_pin: !PC13
enable_pin: !PC14
endstop_pin: !PC7
microsteps: 16
rotation_distance: 40
position_min: 0
position_endstop: 260
position_max: 260
homing_speed: 50

[tmc2208 dual_carriage]
uart_pin: PA8
run_current: 0.8
stealthchop_threshold: 0
# stealthchop_threshold: 999999

#######################################################################################################################
# Left / primary extruder. FYI CS_PIN = PD1
# NB: thermistors are NTC100k B3950. As per PR #4859 in klipper, let's go with 'Generic 3950'
#######################################################################################################################

[extruder]
step_pin: PE1
dir_pin:PD3
enable_pin: !PD4
microsteps: 16
rotation_distance: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD12
sensor_type: Generic 3950
sensor_pin: PC4
control: pid
pid_kp: 19.843
pid_ki: 0.973
pid_kd: 101.201
min_temp: 0
max_temp: 230
min_extrude_temp: 180

[filament_switch_sensor e0_runout_sensor]
pause_on_runout: True
switch_pin: PE10

[heater_fan e0_heater_fan]
pin: PA1
heater: extruder
off_below: 0.1

[verify_heater extruder]
check_gain_time: 60

[fan_generic extruder-part-fan]
pin: PA2
off_below: 0.1

#######################################################################################################################
# Right / secondary extruder. FYI CS_PIN = PE9
# NB: thermistors are NTC100k B3950. As per PR #4859 in klipper, let's go with 'Generic 3950'
#######################################################################################################################

[extruder1]
step_pin: PE0
dir_pin: PA15
enable_pin: !PD0
microsteps: 16
rotation_distance: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD13
sensor_type: Generic 3950
sensor_pin: PA3
control: pid
pid_kp: 19.879
pid_ki: 0.967
pid_kd: 102.130
min_temp: 0
max_temp: 230 # should be 260 according to specs, but since we're only doing PLA and have PTFE in heat, let's go 230.
min_extrude_temp: 180

[filament_switch_sensor e1_runout_sensor]
pause_on_runout: True
switch_pin: PE12

[heater_fan e1_heater_fan]
pin: PB9
heater: extruder1
off_below: 0.1

[verify_heater extruder1]
check_gain_time: 60

[fan_generic extruder1-part-fan]
pin: PA0
off_below: 0.1

#######################################################################################################################
# Bed
# NB: thermistors are NTC100k B3950. As per PR #4859 in klipper, let's go with 'Generic 3950'
#######################################################################################################################

[heater_bed]
heater_pin: PB0
sensor_type: Generic 3950
sensor_pin: PC5
control: watermark
max_delta: 2.0
min_temp: 0
max_temp: 70 # should be 120 according to specs, but let's be safe as we're only doing PLA.

#######################################################################################################################
# MCU temperature/fan
#######################################################################################################################

[temperature_sensor mcu_temperature]
sensor_type: temperature_mcu

# I couldn't figure out the easy way to have a fan that switches on based on the MCU temperature sensor, so instead, 
# make it a heater fan for the heated bed, but go on at t=0, i.e. it'll always be on.
[heater_fan mcu_fan]
pin: PE6
heater: heater_bed
heater_temp: 0

#######################################################################################################################
# Display: BTT Mini 12864 Panel v1.0. In Marlin set as Fystec Mini 12864 v2.1 ...
#######################################################################################################################

[display]
lcd_type: uc1701
cs_pin: PB2
a0_pin: PE8
rst_pin: PE15
contrast: 63
encoder_pins: ^PD15, ^PD14
click_pin: ^!PE7
spi_software_miso_pin: PA6
spi_software_mosi_pin: PA7
spi_software_sclk_pin: PA5

[output_pin beeper]
pin: PB1

[neopixel btt_mini12864]
pin: PE14
chain_count: 3
color_order: RGB
initial_RED: 0.1
initial_GREEN: 0
initial_BLUE: 0

#######################################################################################################################
# Fluidd stuff
#######################################################################################################################

[virtual_sdcard]
path: /opt/gcode

[display_status]

[pause_resume]


#######################################################################################################################
# Macros
#######################################################################################################################

# A utility for others. NB it's assumed they'd G90 and SAVE_GCODE_STATE etc.
[gcode_macro Z_HOP]
variable_unhopz: 0
gcode:
  {% if "z" not in printer.toolhead.homed_axes %}
    action_raise_error("You can't z-hop without a homed z-axis!")
  {% endif %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set cur_z = printer.toolhead.position.z|float %}
  {% if cur_z < (max_z - 2.0) %}
      {% set zhop = cur_z + 2.0 %}
  {% else %}
      {% set zhop = max_z - cur_z %}
  {% endif %}
  SET_GCODE_VARIABLE MACRO=Z_HOP VARIABLE=unhopz VALUE={cur_z}
  G1 Z{zhop} F600

[gcode_macro Z_UNHOP]
gcode:
  {% if "z" not in printer.toolhead.homed_axes %}
    action_raise_error("You can't z-hop without a homed z-axis!")
  {% endif %}
  G1 Z{printer["gcode_macro Z_HOP"].unhopz} F600

# Helper to park the current extruder - really only used in ACTIVATE_EXTRUDER below.
# NB: we should never need to park both, as we should only have one extruder active and, as below, the other should be
# parked at any change.
[gcode_macro PARK_CURRENT]
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    action_raise_error("You can't park axes without homed axes!")
  {% endif %}
    SAVE_GCODE_STATE NAME=park
    G90
    Z_HOP
    {% if printer.toolhead.extruder == "extruder" %}
    G1 X-53 F7800
    {% else %}
    G1 X258 F7800
    {% endif %}
    Z_UNHOP
    RESTORE_GCODE_STATE NAME=park

[gcode_macro ACTIVATE_EXTRUDER]
rename_existing: ACTIVATE_EXTRUDER1
gcode:
  PARK_CURRENT
#   G1 E10 F300; extrude 10mm of filament when changing tool - need a draft shield!
  {% if params.EXTRUDER == 'extruder' %}
  ACTIVATE_EXTRUDER1 EXTRUDER=extruder
  SET_DUAL_CARRIAGE CARRIAGE=0
  SET_GCODE_OFFSET X=0 Y=0
  {% else %}
  ACTIVATE_EXTRUDER1 EXTRUDER=extruder1
  SET_DUAL_CARRIAGE CARRIAGE=1
  SET_GCODE_OFFSET X=-0.6 Y=0.2
  {% endif %}
  # Eject a bit for now to deal with ooze ...


[gcode_macro M106]
gcode:
    {% set speed=params.S|default(255)|int / 255.0 %}
    SET_FAN_SPEED FAN={printer.toolhead.extruder}-part-fan SPEED={speed}

[gcode_macro M107]
gcode:
  SET_FAN_SPEED FAN=extruder-part-fan SPEED=0
  SET_FAN_SPEED FAN=extruder1-part-fan SPEED=0

# Needed for Fluidd
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE