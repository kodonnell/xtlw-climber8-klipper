; Temperatures - klipper only preheats for extruder not extruder1. Also, I don't want all the different options for
; heating for PLA/ABS or cooling (hotend vs bed vs other hotend), as I can manually set temps for that. I just want
; options for all or nothing, so just make these one option.
; Disable old one so we get custom ordering with shortcuts at top. (`index` doesn't seem to work, nor does appending
; existing sections to the end)
[menu __main __temp]
type: disabled

[menu __main __temp2]
type: list
name: Temperature
index: 0

[menu __main __temp2 __preheat_pla]
type: command
name: Preheat PLA
gcode:
    M140 S60
    M104 T0 S200
    M104 T1 S200

[menu __main __temp2 __preheat_abs]
type: command
name: Preheat ABS
gcode:
    M140 S110
    M104 T0 S245
    M104 T1 S245

[menu __main __temp2 __cooldown]
type: command
name: Cooldown
index: 0
gcode:
    M140 S0
    M104 T0 S0
    M104 T1 S0

[menu __main __temp2 __hotend0_target]
type: input
name: {"Ex0 :%3.0f (%3.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 1
realtime: true
gcode: M104 T0 S{'%.0f' % menu.input}

[menu __main __temp2 __hotend1_target]
type: input
name: {"Ex1 :%3.0f (%3.0f)" % (menu.input, printer.extruder1.temperature)}
input: {printer.extruder1.target}
input_min: 0
input_max: {printer.configfile.config.extruder1.max_temp}
input_step: 1
realtime: true
gcode: M104 T1 S{'%.0f' % menu.input}

[menu __main __temp2 __hotbed_target]
type: input
name: {"Bed :%3.0f (%3.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 1
realtime: true
gcode: M140 S{'%.0f' % menu.input}

[menu __main __temp2 __fanspeed0]
type: input
name: {"Fan0:%3.0f (%3.0f)" % (menu.input*100, printer['fan_generic extruder_part_fan'].speed * 100)}
input: {printer['fan_generic extruder_part_fan'].speed}
input_min: 0
input_max: 1
realtime: true
input_step: 0.01
gcode:
    M106 P0 S{'%d' % (menu.input*255)}

[menu __main __temp2 __fanspeed1]
type: input
name: {"Fan1:%3.0f (%3.0f)" % (menu.input*100, printer['fan_generic extruder1_part_fan'].speed * 100)}
input: {printer['fan_generic extruder1_part_fan'].speed}
input_min: 0
input_max: 1
input_step: 0.01
realtime: true
gcode:
    M106 P1 S{'%d' % (menu.input*255)}