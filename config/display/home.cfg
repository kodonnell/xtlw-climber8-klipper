; Custom home screen. Note that we can't seem to be able to define a printing/non-printing group and then 
; dynamically switch to that - so we just wrap every single display_data in a test for printing state. 

; Non-printing items:
[display_data _homescreen nonprinting_msg_top]
position: 1, 0
text: 
  {% if printer.idle_timeout.state != "Printing" %}
    { "     KANE'S" }
  {% endif %}

[display_data _homescreen nonprinting_msg_bottom]
position: 2, 0
text: 
  {% if printer.idle_timeout.state != "Printing" %}
    { "     PRINTER" }
  {% endif %}

; Printing items:
[display_data _homescreen extruder]
position: 0, 0
text:
  {% if printer.idle_timeout.state == "Printing" %}
    ~extruder~
    { "{:<3.0f}".format(printer.extruder.temperature) }
  {% endif %}

[display_data _homescreen heater_bed]
position: 0, 7
text:
  {% if printer.idle_timeout.state == "Printing" %}
    { "%2.0f" % (printer.heater_bed.temperature,) }
  {% endif %}

[display_data _homescreen extruder1]
position: 0, 11
text:
  {% if printer.idle_timeout.state == "Printing" %}
    { "{:>3.0f}".format(printer.extruder1.temperature) }
    ~extruder~
  {% endif %}

[display_data _homescreen extruder_fan]
position: 1, 0
text:
  {% if printer.idle_timeout.state == "Printing" %}
    {% set speed = printer["gcode_macro M106"].extruder_part_fan_speed_normalized %}
    {% if speed > 0 %}
      {% set frame = ((printer.toolhead.estimated_print_time * 10)|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:<3.0f}".format(speed * 100) }
  {% endif %}

[display_data _homescreen speed_factor]
position: 1, 6
text:
  {% if printer.idle_timeout.state == "Printing" %}
    { "{:>4.0%}".format(printer.gcode_move.speed_factor) }
  {% endif %}

[display_data _homescreen extruder1_fan]
position: 1, 11
text:
  {% if printer.idle_timeout.state == "Printing" %}
    {% set speed = printer["gcode_macro M106"].extruder1_part_fan_speed_normalized %}
    { "{:>3.0f}".format(speed * 100) }
    {% if speed > 0 %}
      {% set frame = ((printer.toolhead.estimated_print_time * 10)|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
  {% endif %}

; NB: why modulo 6? That increases the cycle time to 6 seconds.
[display_data _homescreen print_progress]
position: 2, 0
text: 
  {% if printer.idle_timeout.state == "Printing" %}
    {% set taken_seconds=printer.idle_timeout.printing_time|default(-1)|float %}
    {% set taken_minutes=taken_seconds / 60 %}
    {% set remaining_minutes = printer["gcode_macro M73"].remaining_minutes|default(-1)|float %}
    {% if printer.pause_resume.is_paused %}
      { "    PAUSED" }
    {% elif remaining_minutes > 0 and (printer.toolhead.estimated_print_time|int % 6) < 3 %}
      {% set hours=(remaining_minutes / 60) | round(0, 'floor') | int %}
      {% set minutes=(remaining_minutes % 60) | round(0, 'floor') | int %}
      { "  {:4.0%} R{:02d}:{:02d}".format(printer.display_status.progress, hours, minutes) }
    {% else %}
      {% set hours=(taken_minutes / 60) | round(0, 'floor') | int %}
      {% set minutes=(taken_minutes % 60) | round(0, 'floor') | int %}
      { "  {:4.0%} T{:02d}:{:02d}".format(printer.display_status.progress, hours, minutes) }
    {% endif %}
  {% endif %}

[display_data _homescreen progress_bar]
position: 2, 1 # Draw graphical progress bar after text is written
text:
  {% if printer.idle_timeout.state == "Printing" %}
    { draw_progress_bar(2, 0, 16, printer.display_status.progress) }
  {% endif %}

[display_data _homescreen print_status]
position: 3, 0
text:
  {% if printer.idle_timeout.state == "Printing" %}
    {% set z=printer.toolhead.position.z|default(0)|float %}
    {% set current_layer=printer.print_stats.info.current_layer|default(-1)|float %}
    {% set total_layer=printer.print_stats.info.total_layer|default(-1)|float %}
    { "Z%-5.2f [%d/%d]" % (z, current_layer, total_layer) }
  {% endif %}