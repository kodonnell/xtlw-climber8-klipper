; Custom home screen:
[display_data _homescreen extruder]
position: 0, 0
text:
    ~extruder~
    { "{:<3.0f}".format(printer.extruder.temperature) }

[display_data _homescreen heater_bed]
position: 0, 7
text:
    { "%2.0f" % (printer.heater_bed.temperature,) }

[display_data _homescreen extruder1]
position: 0, 11
text:
    { "{:>3.0f}".format(printer.extruder1.temperature) }
    ~extruder~

[display_data _homescreen extruder_fan]
position: 1, 0
text:
    {% set speed = printer["gcode_macro M106"].extruder_part_fan_speed_normalized %}
    {% if speed > 0 %}
      {% set frame = ((printer.toolhead.estimated_print_time * 10)|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:<3.0f}".format(speed * 100) }

[display_data _homescreen speed_factor]
position: 1, 6
text:
  { "{:>4.0%}".format(printer.gcode_move.speed_factor) }

[display_data _homescreen extruder1_fan]
position: 1, 11
text:
    {% set speed = printer["gcode_macro M106"].extruder1_part_fan_speed_normalized %}
    { "{:>3.0f}".format(speed * 100) }
    {% if speed > 0 %}
      {% set frame = ((printer.toolhead.estimated_print_time * 10)|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}

[display_data _homescreen print_progress]
position: 2, 0
text: { "{:^8.0%}".format(printer.display_status.progress) }

[display_data _homescreen progress_bar]
position: 2, 1 # Draw graphical progress bar after text is written
text: { draw_progress_bar(2, 0, 8, printer.display_status.progress) }

[display_data _homescreen printing_time]
position: 2, 9
text: 
    {% if printer.idle_timeout.state == "Printing" %}
      {% set rand = printer.estimated_print_time|default(0)|int % 3 %}
      {% set taken_seconds=printer.idle_timeout.printing_time|default(-1)|float %}
      {% set taken_minutes=taken_seconds / 60 %}
      {% set slicer_estimated_total_print_duration_minutes=printer['gcode_macro M73'].slicer_estimated_total_print_duration_minutes|default(-1)|float %}
      {% set slicer_estimated_remaining_print_duration_minutes = printer["gcode_macro M73"].slicer_estimated_remaining_print_duration_minutes|default(-1)|float %}
      {% set slicer_estimated_print_duration_minutes=slicer_estimated_total_print_duration_minutes - slicer_estimated_remaining_print_duration_minutes %}
      {% if slicer_estimated_remaining_print_duration_minutes > 0 and (printer.toolhead.estimated_print_time|int % 6) < 2 %}
        {% set hours=(slicer_estimated_remaining_print_duration_minutes / 60) | round(0, 'floor') | int %}
        {% set minutes=(slicer_estimated_remaining_print_duration_minutes % 60) | round(0, 'floor') | int %}
        { "R%02d:%02d" % (hours, minutes) }
      {% elif slicer_estimated_print_duration_minutes > 0 and slicer_estimated_remaining_print_duration_minutes >= 0 and (printer.toolhead.estimated_print_time|int % 6) < 4 %}
        {% set seconds = taken_minutes / slicer_estimated_print_duration_minutes * slicer_estimated_remaining_print_duration_minutes %}
        {% set hours=(seconds / 60) | round(0, 'floor') | int %}
        {% set minutes=(seconds % 60) | round(0, 'floor') | int %}
        { "G%02d:%02d" % (hours, minutes) }
      {% else %}
        {% set hours=(taken_minutes / 60) | round(0, 'floor') | int %}
        {% set minutes=(taken_minutes % 60) | round(0, 'floor') | int %}
        { "T%02d:%02d" % (hours, minutes) }
      {% endif %}
    {% endif %}

[display_data _homescreen print_status]
position: 3, 0
text: { render("_print_status") }